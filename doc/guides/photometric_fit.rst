Fiting a model to photometric data
==================================

In broad band observations of astrophysical sources, the total flux is given by the convolution of the radiation coming from the source
with the response of the instrument.
GalaPy objects of type ``galapy.Galaxy.PhotoGXY`` can model this kind of measurements, when the transmission model of the different
observational bands is provided to the class.

Fitting through the command line
................................

Sampling the parameter space can be done from the command line in a terminal.
This will require to compile a template parameter file that can be generated by calling

.. code-block:: console

    $ galapy-genparams [--name/-n NAME]

Where the argument ``NAME`` can include any path in the filesystem.
Since the generated parameter file has python syntax, we suggest to end the eventual custom file name with a ``.py`` extension.
If no argument is passed the parameter file will be generated in the current directory:

.. code-block:: console

    $ ls
    galapy_hyper_parameters.py

The generated file should be self-explanatory and has to be modified according to the fit the user has to perform.

.. warning::
   The parameter file is, for obvious reasons, not ready to use and if one tries to run the fitting without having properly
   modified it, the program will crash.

There are 4 main blocks in the parameter file:

1. Importing the observational measurements one wants to fit.
   
   .. code-block:: python

      filters = None
      bands = None
      fluxes = None
      errors = None
      uplims = None
      
2. Defining the physics of the galaxy model;
3. Choosing the fixed and free parameters (as well as their priors);
4. Defining output format choices.

Once the parameter file has been generated and properly modified, we can run

.. code-block:: console

   $ galapy-fit parameter_file.py [--serial/-s | --multiprocessing/-mp NCPU]

which will run the sampling and authomatically store the results, as specified
by the user in the parameter file.
NOTE THAT the two optional arguments regulate whether to run the sampling
serially or using shared-memory parallelism.
The default behaviour is to run parallely on all the available CPUs.
